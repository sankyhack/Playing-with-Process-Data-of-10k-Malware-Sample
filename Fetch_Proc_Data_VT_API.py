import requests,json, time

headers = {
    'x-apikey': 'YOUR_API_KEY'
}

file = open(r'C:\Users\Admin\Desktop\Study\Python\ProcessList.txt', 'a')  # Collects Data about Processes from Virus total.
hashlist = open(r"C:\Users\Admin\Desktop\Study\Python\Hashlist.txt", 'r')        # List of Hashesh/Malware samples

final_list = []

def walk_list(node,temp_list):       #This function will process nested process list from VirusTotal Output.
    for j in range(0, len(node)):
        for x,y in node[j].items():
            if x == "name":
                #print(y)
                temp_list.append(y)
                file.write(y + "\n")
            if x == "children":
                walk_list(y,temp_list)


for hash in hashlist:
    time.sleep(16)
    url = 'https://www.virustotal.com/api/v3/files/' + hash.rstrip() + '/behaviours'  # VT API request
    print(url)
    #final_list = []
    Hashvalue = hash.rstrip()
    temp_list = []
    try:
        response = requests.get(url, headers=headers)
        data = response.json()

        for i in data['data']:
            #print(i)
            for k, v in i['attributes'].items(): 
                #print(v)
                if (k == 'processes_tree'):	#This will take only Process tree related data
                    #print(v)
                    walk_list(v,temp_list)
                    #for j in range(0, len(v)):
                        #walk_dict(v[j])
                        #print(v[j]['name'])
                        #file.write(v[j]['name'] + "\n")
                if (k == 'command_executions' or k == 'processes_created'): #This will take only Process created and Command execution data
                   #print(v)
                    for command in v:
                        # print(k)
                        #print(command)
                        temp_list.append(command)
                        file.write(command + "\n")
        #print(temp_list)

    except:
        print("VT data not present or data not available")

    temp_dict = {'Hashvalue': Hashvalue, 'Processes': temp_list }
    final_list.append(temp_dict)

#print(final_list)

with open(r"C:\Users\Admin\Desktop\Study\Python\jsontesting.json",'a') as r1:           # Just write collected Process Data in JSON format.
   json.dump(final_list,r1)